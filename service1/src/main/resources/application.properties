spring.application.name=service1
server.port=8081

# URLs for services (configurable)
service.2.url=http://service2:8082

otel.service.name=service1

# ---------- Use below configuration when exporting Actuator metrics to OpenTelemetry Collector
# OpenTelemetry SDK Configuration
otel.metrics.exporter=otlp


# Micrometer with OpenTelemetry Registry
management.metrics.export.otel.enabled=true
management.metrics.export.otel.resource-attributes=service.name=service1
management.otlp.metrics.export.url=http://otel-collector:4318/v1/metrics

# Spring Boot Actuator Configuration
management.endpoints.web.exposure.include=prometheus,health,info
management.endpoint.prometheus.enabled=true
# ---------- Use below configuration when exporting Actuator metrics to OpenTelemetry Collector

# ---------- Use below configuration when exporting metrics directly to Prometheus 
# OpenTelemetry Metrics Configuration
# otel.metrics.exporter=prometheus
# otel.metrics.exporter.prometheus.port=9464
# otel.metrics.exporter.prometheus.host=prometheus
# ---------- Use below configuration when exporting metrics directly to Prometheus 

# # ---------- Use below configuration when exporting Otel standard metrics to OpenTelemetry Collector
# # Disable default Spring Boot actuator metrics since we are using OpenTelemetry
# otel.exporter.otlp.endpoint=http://otel-collector:4317
# management.endpoints.enabled-by-default=false
# management.metrics.export.prometheus.enabled=false
# # ---------- Use below configuration when exporting Otel standard metrics to OpenTelemetry Collector


